<h1>Notes for September 24, 2013</h1>

<h2>Sample answer for Asssignment 1</h2>
<pre>
	#! /bin/bash
	usage()
	{
	cat &lt;&lt;-EOF
		Usage: users &lt;option(s)&gt;&lt;regex&gt;
		where options are:
		-h  : displays help
		-n  : displays number of users
	EOF

		exit 0
	}

	domysql()
	{
		mysql -BCNnqs --disable-pager -usystem -pmanager mysql &lt;&lt;-EOF

		$e;
		exit
	EOF
	}

	if (( $$ == 0 )); then
		domysql "select user from user order by user"
	elif (( $$ == 1))
		if [[ $1 == "-n" ]]; then
			echo -n "number of users:"
			domysql "select count(*) from user"
		elif [[ $1 == "-h" ]; then
			usage
		else
			domysql "select user from user where user regexp '$1' order by user"
		fi
	elif (( $$ == 2 )); then
		echo -n "number of users:"
		domysql "select count(*) from user where user regexp '$2'"
	
			

</pre>

<h2>Recover root password</h2>

<ol>
	<li>Shutdown server</li>
	<pre>
		service mysqld stop
	</pre>
	<li>Modify configuration file</li>
	<pre>
		cd /etc
		vim my.cnf
	</pre>
	<p>Under mysqld group add lines:</p>
	<pre>
		[mysqld]
		skip-grant-tables
	</pre>
	<li>Startup system</li>
	<pre>
		service mysqld start
	</pre>
	<li>Log into mysql</li>
	<pre>
		mysql -u root mysql
	</pre>
	<li>Change password</li>
	<pre>
		update user set password=password('[new_password]') where user='root' and host = 'localhost'
	</pre>
	<li>Shutdown mysql</li>
	<pre>
		mysqladmin -u root -p[new_password] shutdown
	</pre>
	<li>Restor configuration file</li>
	<pre>
		cd /etc/
		vim my.cnf
		# skip_grant_tables
	</pre>
</ol>

<p>Can also avoid modifying configuration file by setting the option when bringing up mysqld</p>

<ol>
	<li>Shutdown server</li>
	<pre>
		service mysqld stop
	</pre>
	<li>Startup system with --skip-grant-tables</li>
	<pre>
		cd $BASEDIR/bin
		mysqld_safe --skip-grant-tables &amp;
		mysqladmin -u root flush-privileges password "[new_password]"
	</pre>
	<li>Shutdown mysql</li>
	<pre>
		mysqladmin -u root -p[new_password] shutdown
	</pre>
</ol>

<h2>Privileges</h2>

<p>MySQL comes with many options.  Important to give just the right amount of power to users, not too much and not too little.</p>
<p>To give privileges use grant</p>

<p>Possible privileges:</p>
<table style="margin:10px auto;">
	<tr>
		<td>
			<ul>
				<li>select</li>
				<li>insert</li>
				<li>update</li>
				<li>delete</li>
				<li>lock tables</li>
				<li>create</li>
				<li>create temporary table</li>
			</ul>
		</td>
		<td>
			<ul>
				<li>alter</li>
				<li>index</li>
				<li>drop</li>
				<li>create view</li>
				<li>show view</li>
				<li>alter routine</li>
				<li>create routine</li>
				<li>execute</li>
				<li>file</li>
			</ul>
		</td>
		<td>
			<ul>
				<li>create user</li>
				<li>grant option</li>
				<li>show databases</li>
				<li>process</li>
				<li>super</li>
				<li>reload</li>
				<li>replication client</li>
				<li>replication slave</li>
				<li>shutdown</li>
			</ul>
		</td>
</table>

<p>Use revoke to remove privileges, i.e. :</p>
<pre>
	revoke select on *.* from 'john'@'localhost';  (remove select privileges for all databases)
	revoke all on *.* from 'john'@'localhost';     (remove all privileges for all databases)
	revoke all on *.* from 'john'.'%'; 	       (remove all privileges for all hosts)
</pre>

<h2>Homework 3: Deleting accounts</h2>
<p>Due next week</p>

<p>create script called delete_acct</p>
<p>-f filename (filename of file with list of user id's, one id per line)</p>
<p>To delete account:</p>
<pre>
	delete from user where user='jlin05';
	flush privileges;
</pre>

<p>Can also accept list of login id's/crn</p>
<pre>
	delete_acct [-f filename] crn1/id1 crn2/id2 ...
output:
	deleted accounts:
	...
	...
	...
</pre>

<h2>Restrictions</h2>
<p>Sometimes when creating account need to add restrictions to account</p>

<p>MySQL does not have very many options for this</p>


<pre>
	grant all on *.* to 'alex'@'localhost'
	with MAX_CONNECTION_PER_HOUR 10
	     MAX_QUERIES_PER_HOUR 200
	     MAX_UPDATES_PER_HOUR 50
	     MAX_USER_CONNECTIONS 10;
</pre>

<p>If any restriction set to 0, then means <b>unlimited</b></p>

<h2>Query Privileges</h2>

<pre>
	show grants for 'alex'@'localhost';
	show grants;	&larr;shows your privileges
	show grants for current_user();	&larr;shows your privileges
</pre>

<h2>Locking Tables</h2>
<pre>
	#lock table table1 locktype, table2 locktype ...
	lock table empl READ;  &larr;(employee table only able to read)
</pre>
<p>READLOCAL - able to read and insert</p>
<p>WRITE - able to read and modify</p>

<p>dbas are usually locking and unlocking tables constantly</p>
<p>Always make sure to flush table</p>

<pre>
	lock table pretty read;
	flush table pretty;
or
	flush tables with read lock; &larr;(locks all the table);
	set global read_only=on;

	set global read_only=off;

	unlock tables;
</pre>
<p>These commands can only be used if have lock table privileges</p>

<h2>Daily use sql commands</h2>

<pre>
	select * from students;
	select count(*) from students;
	select count(distinct age) from students;
	select name like '%s' from students;
	select name regexp '^s' from students; 
	select name from students order by name desc;
	select name from students limit 5;
	select name from students limit 10,5;
	delete from students where name regexp 'n$';
	update students set final='A' where scores &gt;= 90;
	insert into students values (........);
	insert into students values (....),(....),(...),(....);
	insert into students (name,age) values(...,..),(....,...);
</pre>


