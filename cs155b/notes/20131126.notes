<h1>Notes for November 26, 2013</h1>

<p>Note: was 30 min late</p>

<h2>Functions</h2>

<p>List functions:</p>
<pre>
	show function status;
</pre>

<p>results look like:</p>
<table><tr>
	<th>DB</th> <th>Name</th> <th>type</th> <th>hefiner</th> <th>securityType</th> <th>comment</th>
</tr><tr>
	<td>mydb</td> <td>good</td> <td>function</td> <td>abbas</td> <td>definer</td><td></td>
</tr><tr>
	<td>test</td> <td>nice</td> <td>function</td> <td>john</td> <td>definer</td><td></td>
</tr></table>

<p>Can filter list:</p>
<pre> 
	show function status where db='test';
</pre>

<p>Simple function:</p>
<pre>
	delimiter $$
	procedure good_students(IN grade int)
	begin
		select lname, fname whereee avg_score &gt;=grade;
	end$$

	delimiter ;
</pre>

<p>Another example:</p>

<pre>
	delimiter $$
	drop function if exists fact$$
	createfunction fact(n int)
	returns int
	NO SQL
	begin
		declare p int default 1;
		while (n &gt;= 1) do
			set p = p * n;
			set n = n - 1
		end while;
		return p;
	end$$

</pre>

<p>Example from final exame: create procedure called showTime:</p>
<pre>
	delimiter $$
	create procedure show_time()
	begin
		select concat('time is: ', now());
	end $$
	delimiter ;

Use by saying:
	call show_time();
</pre>
	
<pre>
	delimiter $$
	create procedure count_row( tb_name text, out n int)
	begin
		set @cmd= concat"select count(*) from ", tb_name, " into @n");
		prepare st from @cmd
		execute st;
		deallocate prepare st;
		set n=@n;
	end$$
</pre>

<p>More info on prepared statements:</p>
<pre>
	prepare st from 'insert into product_codes values (?,?)";

	set @code='QB';
	set @name='MySql Query Browser';
	execute st using @code, @name;
	deallocate st;
</pre>

<p>Another example:</p>
<pre>
	delimiter $$
	create function cust_status(status char(1))
	returns varchar(20)
	begin
		if status ='O' then
			return('Over_due');
		elseif status = 'U' then
			return('Uptodate');
		elseif status = 'N' then
			return('New');
		end if;

		return('incalid code');
	end$$
	delimiter ;
</pre>

<p>Another kind of loop:</p>
<pre>
	set i-0;
loop1:	loop
		set i =  i + 1;
		if &gt;= 10 then leave loop1;
		elseif mod(i, 2) = 0 then iterate loop1;
		end if
		select concat(i, " is an odd number");
	end loop loop1
</pre>

<p>Old homework assignment, make function "shorten"</p>
<pre>
	create functionn shorten( s varcahr(255), n int)
	returns varchar(255)
	begin
		if isnull(s) then
			return '';
		elseif n &lt; 15 then
			return left(s, n);
		elseif cahr_length(s) &lt;= n then
			return s;
		else
			return concat( left(s, n-10), '...', right(s, 5));
		end if;
	end$$
</pre>

<p>Another exam question:</p>
<pre>
	create function half(value double) returns double
	deterministic
	comment "This is a final exam question'
	begin
		return value / 2;
	end$$
	select half(62);
</pre>

<p>Another exam question:</p>
<p>Select all of the nmaes of your functions in mydb database</p>
<pre>
	select name from proc where type = 'FUNCTION';

	select * from inforamtion_schema.routines;
</pre>

<p>Some stored procedure declaration options:</p>
<pre>
	LANGUAGE SQL
	DETERMNISTIC || NON DETERMINISTIC
	CONTAINS SQL || NO SQL
	READS SQL DATA || MODIFIES SQL DATA
	COMMENT "string"

	security also goes here but will go over it later
</pre>

<p>To change name of routine:</p>
<pre>
	alter function abcd name doit;
or
	alter procedure abcd name doit;
</pre>

<p>To see source code of function:</p>
<pre>
	show create function abcd;
</pre>

<p>to back up function:</p>
<pre>
	mysqldump mysql proc &gt; mybackup.sql
</pre>

<p>Can only back up and restore everything at once though</p>
