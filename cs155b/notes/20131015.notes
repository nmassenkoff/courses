<h1>Notes for October 15, 2013</h1>
<h2>Answers to Midterm</h2>

<ol>
<li>
<pre>
login as root
cp $BASEDIR/support-files/my.large.cnf /etc/my.cnf
</pre>
</li>
<li>
<pre>
login as mysql
$BASEDIR/scripts/mysql_install_db --user=mysql
</pre>
</li>
<li>
<pre>
mysql -u root -pmanager mysql
grant all on *.* to 'super'@'localhost' identified by 'xxx' with grant option;
</pre>
</li>
<li>
<pre>
mysqladmin -u root -pxxx ping
</pre>
</li>
<li>
<pre>
service mysqld start
or
/etc/init.d
mysqld start
or
#BASEDIR/mysql_safe --user=mysql 
</pre>
</li>
<li>
<pre>
service mysqld stop
/etc/init.d/mysqld --skip-grant-tables start
</pre>
</li>
<li>
<pre>
use mysql;
update user set password=password('xxx') where user='root' and host='localhost';
or
set password=password('xxx');
flush privileges;
or
mysqladmin -u root -pyyy password='xxx'
</pre>
</li>
<li>
<pre>
mysql -u jane -pmysql
	logs you in as jane with password 
	mysql, and no database is selected

mysql -u jane -p mysql
	logs you in as jane and prompts you
	to enter in password, and will automatically
	select mysql database as current database.
</pre>
</li>
<li>
<pre>
--databases
	must specify which database to use, ie: mysqldump --databases dba1 dba2 ...
--all-databases
	all databases are selected, ie: mysqldump --all-databases
</pre>
</li>
<li>
<pre>
mysqldump --user=root --password=[root password] --databases mysql &gt; mysql_backup.sql

or to prevent corruption

mysqldump --databases mysql --lock-all-tables &gt; mysql_backup.sql

or physical

cd $DATADIR/mysql
tar -zcvf /tmp/yyy.tz .
</pre>
</li>
</ol>


<h2>Tweak Binary Installation</h2>
<h3>sql_mode</h3>
<p>For example you are able to set your system to behave like oracle, or change system to accept invalid data, or if invalid data is entered to try and be smart enough to modify data to correct</p>

<p>Modify the sql_mode in:</p>
<ol>
	<li>Modify configuration file</li>
	<li>add to option of mysqld on command line when starting mysql</li>
</ol>
<p>Can also affect behaviour by using global or local(session) variables</p>

<p>Syntax:</p>
<pre>
for command line:
	--sql-mode="comma delineated list of modes"
for config file:
	[mysqld]
	sql-mode="comma delineated list of modes"
</pre>

<p>To see what modes are set:</p>
<pre>
	show global variables like 'sql_mode';
or
	select @@global.sql_mode;
	select @@session.sql_mode;
or
	select variable_name, variable_value
	from information_schema.global_variables
	where variable_name='sql_mode';

	select variable_name, variable_value
	from information_schema.session_variables
	where variable_name='sql_mode';
</pre>

<p>Popular modes:</p>
<ul>
	<li>ANSI</li>
	<li>TRADITIONAL</li>
	<li>ALLOW_INVALID_DATE</li>
	<li>ANSI_QUOTES(allowing double quotes and single quotes normaly only single)</li>
	<li>ERROR_FOR_DIVISION_BY_ZERO (normally only give warning and continue)</li>
	<li>IGNORE_SPACE</li>
	<pre>
		select sqrt(49);
		vs
		select sqrt (49);
	</pre>

	<li>PIPES_AS_CONCAT ('x'||'y' is 'xy')</li>
	<li>REAL_AS_FLOAT (REAL and FLOAT technically the same but one or the other is used depending on the version of sql)</li>
</ul>

<h3>How to use</h3>

<pre>
	mysql&gt; set session sql_mode=''; (sets sql_mode to nothing)
	mysql&gt; use test;
	mysql&gt; create table sqlmode_test (num tinyint not null);
	mysql&gt; insert into sql_mode_test values(126),(127),(128);
	mysql&gt; show warnings;  (will show warnings of previous command)

</pre>
<p> Above will have warning about inserting 128 because it is to big for tinyint type</p>
<pre>
	mysql&gt; select num from sql_mode_test;
result:
	126
	127
	127
</pre>

<p>Mysql automatically "fixed" 128 to fit into tinyint.  Sometimes this is good, sometimes this is bad</p>
<p>To change behaviour, modify sql_mode:</p>

<pre>
	set session sql_mode='TRADITIONAL'
</pre>
<p>Now will receive error message and not enter anything for '128'</p>

<h2>Variables</h2>
<p>To set:</p>
<pre>
	set global x=25;
	set @@global.x=25;

	set session y=12;
	set @@session y=12;

	set session z=18, global g=20;

</pre>

<h2>Sending Shock to Daemon</h2>
<p>Most of the time your daemon is sleeping, (it is their nature)</p>

<p>In order to wake up daemon of course could "shutdown" but cannot do that in real world because people need to access daemon</p>

<p>Simple script called "nudge" that does this job</p>

<pre>
	#!/bin/bash
	# nudge
	# To wake up &amp; read /etc/my.cnf

	pid=$(cat $DATADIR/$(hostname).err)

	kill 1 $pid
</pre>
<p>signal 1 = SIGHUP, or aka HUP</p>

<p>Example of use is to disable grant tables</p>
<pre>
	su root
	replace #skip_grant_tables skip_grant_tables --  /etc/mycnf
	nudge
</pre>
<p>replace comes with mysql, can replace any number of values.  -- signals end of list</p>
<p>i.e.:</p>
<pre>
	replace good bad nice ugly tall short -- myfile
</pre>

<h2>Other commands that come with mysql</h2>
<h3>perror</h3>
<p>Give perror the error number, and will tell you the error message</p>

<pre>
	perror 25,30,42,...
</pre>

<h4>Example final exam question</h4>
<p>what does this do:</p>
<pre>
	replace a b b a -- file1 file2 file3
</pre>
<p>answer: replaces all b's to a's in file1 file2 and file3</p>

<h3>mysql_zap</h3>

<pre>
	mysql_zap "abc*"
</pre>
<p>Will kill all the programs that start with abc.</p>

<pre>
	mysql_zap "mysql"
</pre>
<p>Use -f to force kill without confirmation, use -t to only test (not actually kill)</p>

<p>To change "killing" method:</p>
<pre>
	mysql_zap -signal SIGHUP "abc*"
</pre>


